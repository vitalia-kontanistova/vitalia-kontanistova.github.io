{"version":3,"sources":["components/table/TableStyled.styled.js","components/itemForm/CustomInput.jsx","components/itemForm/ItemForm.jsx","components/itemForm/ItemFormContainer.jsx","components/item/Item.jsx","components/item/ItemContainer.jsx","components/table/Table.jsx","components/table/TableContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["colors","StyledWrapper","styled","div","StyledContent","StyledTitle","h1","StyledTable","StyledHeader","StyledItem","StyledTableButton","button","props","red","StyledForm","Form","separate","StyledButtonsBlock","StyledInput","input","error","StyledButton","StyledTotalCost","StyledBlock","CustomInput","useField","field","meta","touched","ItemForm","initialValues","name","amount","cost","validationSchema","yup","min","matches","stringReg","required","amountReg","notOneOf","costReg","onSubmit","values","submitChanges","dropChanges","type","placeholder","onClick","ItemFormContainer","id","item","setEditItemStatus","setAddItemsStatus","editItem","addItem","Item","changeItem","deleteItem","ItemContainer","useState","isEditItemActive","ItemsList","items","map","Table","isAddItemActive","toggleAddItemsStatus","totalCost","TableContainer","initialList","localStorage","getItem","JSON","parse","setItems","setTotalCost","useEffect","forEach","setItem","stringify","itemsList","length","Math","floor","random","getItemsList","prevState","filter","currentItem","index","findIndex","slice","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68289d4b.chunk.js","sourcesContent":["import { Form } from \"formik\";\r\nimport styled from \"styled-components\";\r\n\r\nlet colors = {\r\n  white: \"#ffffff\",\r\n  black: \"#666697\",\r\n  grey: \"#E8F0FE\",\r\n  darkBlue: \"#6C7AE0\",\r\n  blue: \"#C4D3F6\",\r\n  lightBlue: \"#ECECFF\",\r\n  red: \"#DC545E\",\r\n  lightRed: \"#F2B0B1\",\r\n  almastWhite: \"#F8F8FF\",\r\n};\r\n\r\nexport const StyledWrapper = styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  padding: 60px 60px;\r\n  color: ${colors.black};\r\n\r\n  @media (max-width: 600px) {\r\n    padding: 60px 20px;\r\n  }\r\n  @media (max-width: 550px) {\r\n    overflow: scroll;\r\n  }\r\n`;\r\n\r\nexport const StyledContent = styled.div`\r\n  max-width: 960px;\r\n  margin: 0 auto;\r\n  font-size: 18px;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 15px;\r\n  }\r\n  @media (max-width: 550px) {\r\n    min-width: 500px;\r\n  }\r\n`;\r\n\r\nexport const StyledTitle = styled.h1`\r\n  font-size: 28px;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const StyledTable = styled.div`\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  border: 2px solid ${colors.darkBlue};\r\n`;\r\n\r\nexport const StyledHeader = styled.div`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 3fr 2fr 2fr 100px;\r\n  align-items: center;\r\n  background: ${colors.darkBlue};\r\n  color: ${colors.white};\r\n\r\n  div {\r\n    line-height: 150%;\r\n    padding: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledItem = styled(StyledHeader)`\r\n  background: ${colors.white};\r\n  color: ${colors.black};\r\n  border-bottom: 1px solid ${colors.lightBlue};\r\n  white-space: wrap;\r\n  :last-child {\r\n    border: none;\r\n  }\r\n  :hover {\r\n    background: ${colors.lightBlue};\r\n  }\r\n  button {\r\n    background: none;\r\n    height: 100%;\r\n    :hover {\r\n      background: ${colors.blue};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledTableButton = styled.button`\r\n  background: ${(props) => (props.red ? colors.lightRed : colors.blue)};\r\n`;\r\n\r\nexport const StyledForm = styled(Form)`\r\n  max-width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 3fr 2fr 2fr 100px;\r\n\r\n  border-top: 1px solid ${colors.darkBlue};\r\n  border-bottom: 1px solid ${colors.darkBlue};\r\n  overflow: hidden;\r\n  margin-top: ${(props) => (props.separate ? \"40px\" : \"\")};\r\n  border: ${(props) => (props.separate ? `2px solid ${colors.darkBlue}` : \"\")};\r\n  border-radius: ${(props) => (props.separate ? \"10px\" : \"\")};\r\n`;\r\n\r\nexport const StyledButtonsBlock = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  background: ${(props) => (props.error ? colors.lightRed : colors.grey)};\r\n  font-size: 18px;\r\n  line-height: 150%;\r\n  padding: 20px;\r\n  color: ${colors.darkBlue};\r\n  min-width: 50px;\r\n  -moz-appearance: textfield;\r\n\r\n  ::-webkit-outer-spin-button,\r\n  ::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 15px;\r\n  }\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 2px 10px;\r\n  background: lightgray;\r\n  white-space: nowrap;\r\n  background: ${colors.darkBlue};\r\n  color: ${colors.white};\r\n  border-radius: 10px;\r\n  font-size: 18px;\r\n  line-height: 150%;\r\n  padding: 10px 15px;\r\n  min-width: 220px;\r\n\r\n  @media (max-width: 600px) {\r\n    font-size: 15px;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledTotalCost = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 10px;\r\n  border: 2px solid ${colors.darkBlue};\r\n  min-width: 220px;\r\n  padding: 10px;\r\n  line-height: 150%;\r\n\r\n  span {\r\n    font-weight: bold;\r\n    padding-left: 5px;\r\n  }\r\n`;\r\nexport const StyledBlock = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 40px;\r\n\r\n  @media (max-width: 600px) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { StyledInput } from \"../table/TableStyled.styled\";\r\n\r\nconst CustomInput = (props) => {\r\n  const [field, meta] = useField(props);\r\n  let error = !!(meta.touched && meta.error);\r\n\r\n  return (\r\n    <>\r\n      <StyledInput {...field} {...props} error={error} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n","import React from \"react\";\r\nimport * as yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport CustomInput from \"../itemForm/CustomInput\";\r\nimport {\r\n  StyledForm,\r\n  StyledButtonsBlock,\r\n  StyledTableButton,\r\n} from \"../table/TableStyled.styled\";\r\n\r\nconst ItemForm = (props) => {\r\n  return (\r\n    <>\r\n      <Formik\r\n        initialValues={{\r\n          name: props.name,\r\n          amount: props.amount,\r\n          cost: props.cost,\r\n        }}\r\n        validationSchema={yup.object({\r\n          name: yup.string().min(2).matches(props.stringReg).required(),\r\n          amount: yup\r\n            .string()\r\n            .matches(props.amountReg)\r\n            .notOneOf([\"0\"])\r\n            .required(),\r\n          cost: yup.string().matches(props.costReg).notOneOf([\"0\"]).required(),\r\n        })}\r\n        onSubmit={(values) => {\r\n          props.submitChanges(values);\r\n        }}\r\n      >\r\n        {({ separate = props.separate, dropChanges = props.dropChanges }) => {\r\n          return (\r\n            <StyledForm separate={separate}>\r\n              <CustomInput type=\"text\" name=\"name\" placeholder=\"товар\" />\r\n              <CustomInput type=\"number\" name=\"amount\" placeholder=\"кол-во\" />\r\n              <CustomInput type=\"number\" name=\"cost\" placeholder=\"цена\" />\r\n              <StyledButtonsBlock>\r\n                <StyledTableButton type=\"submit\">✓</StyledTableButton>\r\n                <StyledTableButton red onClick={dropChanges}>\r\n                  ✗\r\n                </StyledTableButton>\r\n              </StyledButtonsBlock>\r\n            </StyledForm>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemForm;\r\n","import React from \"react\";\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nconst ItemFormContainer = (props) => {\r\n  const amountReg = /^\\d{1,5}$/;\r\n  const costReg = /^\\d{1,6}$/;\r\n  const stringReg = /[a-zA-Zа-яА-Я]/;\r\n\r\n  let id = props.item ? props.item.id : \"\";\r\n  let name = props.item ? props.item.name : \"\";\r\n  let amount = props.item ? props.item.amount : \"\";\r\n  let cost = props.item ? props.item.cost : \"\";\r\n\r\n  let submitChanges = (values) => {\r\n    if (id !== \"\" && id > -1) {\r\n      props.editItem(id, values.name, values.amount, values.cost);\r\n    } else {\r\n      props.addItem(values.name, values.amount, values.cost);\r\n    }\r\n    dropChanges();\r\n  };\r\n\r\n  let dropChanges = () => {\r\n    if (id !== \"\" && id > -1) {\r\n      props.setEditItemStatus(false);\r\n    } else {\r\n      props.setAddItemsStatus(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ItemForm\r\n      separate={props.separate}\r\n      amountReg={amountReg}\r\n      costReg={costReg}\r\n      stringReg={stringReg}\r\n      name={name}\r\n      amount={amount}\r\n      cost={cost}\r\n      submitChanges={submitChanges}\r\n      dropChanges={dropChanges}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ItemFormContainer;\r\n","import React from \"react\";\r\nimport { StyledItem } from \"../table/TableStyled.styled\";\r\n\r\nconst Item = (props) => {\r\n  return (\r\n    <StyledItem>\r\n      <div onClick={props.changeItem}>{props.item.name}</div>\r\n      <div onClick={props.changeItem}>{props.item.amount}</div>\r\n      <div onClick={props.changeItem}>${props.item.cost}</div>\r\n      <button onClick={props.deleteItem}>✗</button>\r\n    </StyledItem>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { useState } from \"react\";\r\nimport ItemFormContainer from \"../itemForm/ItemFormContainer\";\r\nimport Item from \"./Item\";\r\n\r\nfunction ItemContainer(props) {\r\n  let [isEditItemActive, setEditItemStatus] = useState(false);\r\n  let changeItem = () => {\r\n    setEditItemStatus(true);\r\n  };\r\n  let deleteItem = () => {\r\n    props.deleteItem(props.item.id);\r\n  };\r\n\r\n  if (isEditItemActive) {\r\n    return (\r\n      <ItemFormContainer\r\n        item={props.item}\r\n        editItem={props.editItem}\r\n        addItem={props.addItem}\r\n        setAddItemsStatus={props.setAddItemsStatus}\r\n        setEditItemStatus={setEditItemStatus}\r\n        separate={props.separate}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <Item item={props.item} changeItem={changeItem} deleteItem={deleteItem} />\r\n  );\r\n}\r\n\r\nexport default ItemContainer;\r\n","import React from \"react\";\r\nimport ItemContainer from \"../item/ItemContainer\";\r\nimport {\r\n  StyledTitle,\r\n  StyledTable,\r\n  StyledHeader,\r\n  StyledButton,\r\n  StyledTotalCost,\r\n  StyledBlock,\r\n} from \"./TableStyled.styled\";\r\nimport ItemFormContainer from \"../itemForm/ItemFormContainer\";\r\n\r\nconst Table = (props) => {\r\n  return (\r\n    <>\r\n      <StyledTitle> Таблица товаров</StyledTitle>\r\n      <StyledTable>\r\n        <StyledHeader>\r\n          <div>Товар</div>\r\n          <div>Количество</div>\r\n          <div>Стоимость</div>\r\n          <div></div>\r\n        </StyledHeader>\r\n        <ItemsList\r\n          items={props.items}\r\n          editItem={props.editItem}\r\n          deleteItem={props.deleteItem}\r\n        />\r\n      </StyledTable>\r\n\r\n      {props.isAddItemActive ? (\r\n        <ItemFormContainer\r\n          editItem={props.editItem}\r\n          separate={true}\r\n          addItem={props.addItem}\r\n          setAddItemsStatus={props.setAddItemsStatus}\r\n        />\r\n      ) : (\r\n        []\r\n      )}\r\n\r\n      <StyledBlock>\r\n        <StyledButton onClick={props.toggleAddItemsStatus}>\r\n          Добавить новый товар\r\n        </StyledButton>\r\n        <StyledTotalCost>\r\n          Общая сумма: <span>${props.totalCost}</span>\r\n        </StyledTotalCost>\r\n      </StyledBlock>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ItemsList = (props) => {\r\n  let itemsList = props.items.map((item) => (\r\n    <ItemContainer key={item.id} {...props} item={item} />\r\n  ));\r\n\r\n  return itemsList;\r\n};\r\n\r\nexport default Table;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Table from \"./Table\";\r\n\r\nfunction TableContainer(props) {\r\n  let initialList = localStorage.getItem(\"itemsList\")\r\n    ? JSON.parse(localStorage.getItem(\"itemsList\"))\r\n    : [];\r\n  let [items, setItems] = useState(initialList);\r\n  let [isAddItemActive, setAddItemsStatus] = useState(false);\r\n  let [totalCost, setTotalCost] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let cost = 0;\r\n    items.forEach((item) => {\r\n      cost += item.cost * item.amount;\r\n    });\r\n\r\n    setTotalCost(cost);\r\n    localStorage.setItem(\"itemsList\", JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  useEffect(() => {\r\n    let itemsList = JSON.parse(localStorage.getItem(\"itemsList\"));\r\n\r\n    if (itemsList.length == 0) {\r\n      itemsList = getItemsList();\r\n      localStorage.setItem(\"itemsList\", JSON.stringify(itemsList));\r\n    }\r\n    setItems(itemsList);\r\n  }, []);\r\n\r\n  let deleteItem = (id) => {\r\n    setItems((prevState) => prevState.filter((item) => item.id !== id));\r\n  };\r\n  let addItem = (name, amount, cost) => {\r\n    let id = items[items.length - 1].id + 1;\r\n    let item = { id, name, amount, cost };\r\n\r\n    setItems((prevState) => [...prevState, item]);\r\n  };\r\n  let toggleAddItemsStatus = () => {\r\n    setAddItemsStatus((prevState) => !prevState);\r\n  };\r\n  let editItem = (id, name, amount, cost) => {\r\n    let currentItem = { id, name, amount, cost };\r\n    let index = items.findIndex((item) => item.id === id);\r\n\r\n    if (index > -1) {\r\n      let itemsList = items.slice();\r\n      itemsList.splice(index, 1, currentItem);\r\n      setItems(itemsList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Table\r\n      items={items}\r\n      deleteItem={deleteItem}\r\n      addItem={addItem}\r\n      isAddItemActive={isAddItemActive}\r\n      setAddItemsStatus={setAddItemsStatus}\r\n      totalCost={totalCost}\r\n      editItem={editItem}\r\n      toggleAddItemsStatus={toggleAddItemsStatus}\r\n    />\r\n  );\r\n}\r\n\r\nexport default TableContainer;\r\n\r\nfunction getItemsList() {\r\n  let itemsNames = [\r\n    \"Монстера Адансона (Monstera Adansonii)\",\r\n    \"Эпипремнум 'Happy Leaf' (Epipremnum 'Happy Leaf')\",\r\n    \"Крассула Марнье (Crassula Marnieriana)\",\r\n    \"Плющ Обыкновенный (Hedéra Hélix)\",\r\n    \"Пилея Пеперомиевидная (Pilea Peperomioides)\",\r\n    \"Замиокулькас Замиели́cтный (Zamioculcas Zamiifolia)\",\r\n    \"Сансевие́рия (Sansevieria)\",\r\n    \"Пеперо́мия (Peperomia Raindrop)\",\r\n    \"Церопегия Вуда (Ceropegia Woodii)\",\r\n    \"Кресто́вник Роули (Senécio Rowleyanus)\",\r\n  ];\r\n  let id = 0;\r\n  let itemsList = itemsNames.map((name) => {\r\n    let item = {\r\n      id,\r\n      name,\r\n      amount: Math.floor(Math.random() * 7) + 3,\r\n      cost: Math.floor(Math.random() * 95) + 5,\r\n    };\r\n    id++;\r\n    return item;\r\n  });\r\n  return itemsList;\r\n}\r\n","import \"./App.css\";\nimport TableContainer from \"./components/table/TableContainer\";\nimport {\n  StyledContent,\n  StyledWrapper,\n} from \"./components/table/TableStyled.styled\";\n\nfunction App() {\n  return (\n    <StyledWrapper>\n      <StyledContent>\n        <TableContainer />\n      </StyledContent>\n    </StyledWrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}